<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20213.21.0917.1006                               -->
<workbook original-version='18.1' source-build='2021.3.1 (20213.21.0917.1006)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <style>
    <_.fcp.MarkAnimation.true...style-rule element='animation'>
      <format attr='animation-on' value='ao-off' />
    </_.fcp.MarkAnimation.true...style-rule>
  </style>
  <datasources>
    <datasource caption='data_science_colleges.csv (Multiple Connections)' inline='true' name='federated.13rvt2y04oszpj14uaa0l08ie1jk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='data_science_colleges' name='textscan.15pv9hm1ttofam1f2g2ti1t0hl4n'>
            <connection class='textscan' directory='C:/Users/riapa/Downloads/Himani/Business_Analytics/BAN140/Workshop5' filename='data_science_colleges.csv' password='' server='' />
          </named-connection>
          <named-connection caption='Hospital Visits' name='excel-direct.1xoyddz06zk7wm1h25p710w4cwcg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/riapa/Downloads/Himani/Business_Analytics/BAN140/Workshop5/Hospital Visits.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.15pv9hm1ttofam1f2g2ti1t0hl4n' name='data_science_colleges.csv' table='[data_science_colleges#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='SCHOOL' ordinal='0' />
            <column datatype='string' name='PROGRAM' ordinal='1' />
            <column datatype='string' name='DEGREE' ordinal='2' />
            <column datatype='boolean' name='ONLINE' ordinal='3' />
            <column datatype='boolean' name='ONCAMPUS' ordinal='4' />
            <column datatype='string' name='COUNTRY' ordinal='5' />
            <column datatype='string' name='STATE' ordinal='6' />
            <column datatype='string' name='CITY' ordinal='7' />
            <column datatype='string' name='DEPARTMENT' ordinal='8' />
            <column datatype='string' name='URL' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.15pv9hm1ttofam1f2g2ti1t0hl4n' name='data_science_colleges.csv' table='[data_science_colleges#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='SCHOOL' ordinal='0' />
            <column datatype='string' name='PROGRAM' ordinal='1' />
            <column datatype='string' name='DEGREE' ordinal='2' />
            <column datatype='boolean' name='ONLINE' ordinal='3' />
            <column datatype='boolean' name='ONCAMPUS' ordinal='4' />
            <column datatype='string' name='COUNTRY' ordinal='5' />
            <column datatype='string' name='STATE' ordinal='6' />
            <column datatype='string' name='CITY' ordinal='7' />
            <column datatype='string' name='DEPARTMENT' ordinal='8' />
            <column datatype='string' name='URL' ordinal='9' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>SCHOOL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[SCHOOL]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>SCHOOL</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>PROGRAM</remote-name>
            <remote-type>129</remote-type>
            <local-name>[PROGRAM]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>PROGRAM</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEGREE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEGREE]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>DEGREE</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ONLINE</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ONLINE]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>ONLINE</remote-alias>
            <ordinal>3</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ONCAMPUS</remote-name>
            <remote-type>11</remote-type>
            <local-name>[ONCAMPUS]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>ONCAMPUS</remote-alias>
            <ordinal>4</ordinal>
            <local-type>boolean</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>COUNTRY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[COUNTRY]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>COUNTRY</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATE</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATE]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>STATE</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CITY</remote-name>
            <remote-type>129</remote-type>
            <local-name>[CITY]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>CITY</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DEPARTMENT</remote-name>
            <remote-type>129</remote-type>
            <local-name>[DEPARTMENT]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>DEPARTMENT</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>URL</remote-name>
            <remote-type>129</remote-type>
            <local-name>[URL]</local-name>
            <parent-name>[data_science_colleges.csv]</parent-name>
            <remote-alias>URL</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Degree' datatype='string' name='[DEGREE]' role='dimension' type='nominal' />
      <column caption='Department' datatype='string' name='[DEPARTMENT]' role='dimension' type='nominal' />
      <column caption='Oncampus' datatype='boolean' name='[ONCAMPUS]' role='dimension' type='nominal' />
      <column caption='Online' datatype='boolean' name='[ONLINE]' role='dimension' type='nominal' />
      <column caption='Program' datatype='string' name='[PROGRAM]' role='dimension' type='nominal' />
      <column caption='School' datatype='string' name='[SCHOOL]' role='dimension' type='nominal' />
      <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='data_science_colleges.csv' datatype='table' name='[__tableau_internal_object_id__].[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]' role='measure' type='quantitative' />
      <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
      <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
      <column-instance column='[DEGREE]' derivation='None' name='[none:DEGREE:nk]' pivot='key' type='nominal' />
      <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (City,Country,State)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:CITY:nk]' />
          <groupfilter function='level-members' level='[none:COUNTRY:nk]' />
          <groupfilter function='level-members' level='[none:STATE:nk]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='COUNTRY, STATE, CITY'>
          <field>[COUNTRY]</field>
          <field>[STATE]</field>
          <field>[CITY]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:DEGREE:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;A&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;M&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;D&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;C&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;B&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='data_science_colleges.csv' id='data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1'>
            <properties context=''>
              <relation connection='textscan.15pv9hm1ttofam1f2g2ti1t0hl4n' name='data_science_colleges.csv' table='[data_science_colleges#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='SCHOOL' ordinal='0' />
                  <column datatype='string' name='PROGRAM' ordinal='1' />
                  <column datatype='string' name='DEGREE' ordinal='2' />
                  <column datatype='boolean' name='ONLINE' ordinal='3' />
                  <column datatype='boolean' name='ONCAMPUS' ordinal='4' />
                  <column datatype='string' name='COUNTRY' ordinal='5' />
                  <column datatype='string' name='STATE' ordinal='6' />
                  <column datatype='string' name='CITY' ordinal='7' />
                  <column datatype='string' name='DEPARTMENT' ordinal='8' />
                  <column datatype='string' name='URL' ordinal='9' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Proportional Symbol Map'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontsize='20'>Propotional Symbol Map</run>
            <run>&#10;Himani Patel, Lijing Wang</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='data_science_colleges.csv (Multiple Connections)' name='federated.13rvt2y04oszpj14uaa0l08ie1jk' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13rvt2y04oszpj14uaa0l08ie1jk'>
            <column caption='City' datatype='string' name='[CITY]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
            <column caption='Country' datatype='string' name='[COUNTRY]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Degree' datatype='string' name='[DEGREE]' role='dimension' type='nominal' />
            <column caption='State' datatype='string' name='[STATE]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <_.fcp.ObjectModelTableType.false...column caption='data_science_colleges.csv' datatype='integer' name='[__tableau_internal_object_id__].[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='data_science_colleges.csv' datatype='table' name='[__tableau_internal_object_id__].[data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1]' role='measure' type='quantitative' />
            <column-instance column='[CITY]' derivation='None' name='[none:CITY:nk]' pivot='key' type='nominal' />
            <column-instance column='[COUNTRY]' derivation='None' name='[none:COUNTRY:nk]' pivot='key' type='nominal' />
            <column-instance column='[DEGREE]' derivation='None' name='[none:DEGREE:nk]' pivot='key' type='nominal' />
            <column-instance column='[STATE]' derivation='None' name='[none:STATE:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Exclusions (City,Country,State)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:CITY:nk]' />
                <groupfilter function='level-members' level='[none:COUNTRY:nk]' />
                <groupfilter function='level-members' level='[none:STATE:nk]' />
              </groupfilter>
              <groupfilter function='reorder-dimensionality'>
                <groupfilter function='union'>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATE:nk]' member='%null%' />
                    <groupfilter function='union'>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='%null%' />
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;AT&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;AU&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;BR&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;CA&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;DE&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;DK&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;ES&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;EU&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;FI&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;FR&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;GB&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;HK&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;IE&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;IT&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;LT&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;MX&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;NL&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;NZ&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;PH&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;PT&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;SE&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;SG&quot;' />
                          <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;TR&quot;' />
                        </groupfilter>
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Auckland&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;NZ&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Bangalore&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Siruseri&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;IN&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Barcelona&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Madrid&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;ES&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Beersheba&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;IL&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Blanchardstown&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Dublin&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;IE&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Burnaby&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;CA&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Eindhoven&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;NL&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Lancaster&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;London&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;GB&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Lviv&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;UA&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Mannheim&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Stuttgart&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;DE&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Mawson Lakes&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;AU&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Mexico City&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;MX&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='union'>
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Nice&quot;' />
                          <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Paris&quot;' />
                        </groupfilter>
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;FR&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Novosibirsk&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;RU&quot;' />
                      </groupfilter>
                      <groupfilter function='crossjoin'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Seoul&quot;' />
                        <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;KR&quot;' />
                      </groupfilter>
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Asturias&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Mieres&quot;' />
                      <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;ES&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATE:nk]' member='&quot;Blekinge&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Karlskrona&quot;' />
                      <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;SE&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATE:nk]' member='&quot;ES&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Madrid&quot;' />
                      <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;ES&quot;' />
                    </groupfilter>
                  </groupfilter>
                  <groupfilter function='crossjoin'>
                    <groupfilter function='member' level='[none:STATE:nk]' member='&quot;HI&quot;' />
                    <groupfilter function='crossjoin'>
                      <groupfilter function='union'>
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Hilo&quot;' />
                        <groupfilter function='member' level='[none:CITY:nk]' member='&quot;Honolulu&quot;' />
                      </groupfilter>
                      <groupfilter function='member' level='[none:COUNTRY:nk]' member='&quot;US&quot;' />
                    </groupfilter>
                  </groupfilter>
                </groupfilter>
                <order>
                  <hierarchy name='[none:CITY:nk]' />
                  <hierarchy name='[none:COUNTRY:nk]' />
                  <hierarchy name='[none:STATE:nk]' />
                </order>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Latitude (generated)]' included-values='non-null' />
          <filter class='quantitative' column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Longitude (generated)]' included-values='non-null' />
          <filter class='categorical' column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:DEGREE:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:DEGREE:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:DEGREE:nk]' member='&quot;A&quot;' />
                <groupfilter function='member' level='[none:DEGREE:nk]' member='&quot;C&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Exclusions (City,Country,State)]</column>
            <column>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Latitude (generated)]</column>
            <column>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Longitude (generated)]</column>
            <column>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:DEGREE:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Longitude (generated)]' field-type='quantitative' max='-9465092.1597622372' min='-13373450.295754721' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Latitude (generated)]' field-type='quantitative' max='7403107.5952729881' min='4756957.0023057992' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:CITY:nk]' value='false' />
            <format attr='break-on-special' field='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:CITY:nk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:CITY:nk]' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:DEGREE:nk]' />
              <size column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[__tableau_internal_object_id__].[cnt:data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1:qk]' />
              <lod column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:COUNTRY:nk]' />
              <lod column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:STATE:nk]' />
              <lod column='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:CITY:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Latitude (generated)]</rows>
        <cols>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{F0CB84D6-1357-4790-9F09-B4440ED749F7}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' maximized='true' name='Proportional Symbol Map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[__tableau_internal_object_id__].[cnt:data_science_colleges.csv_76F77DF345E7435C96DB95CC8F8CBAC1:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:DEGREE:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13rvt2y04oszpj14uaa0l08ie1jk].[none:DEGREE:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='16' />
      </viewpoint>
      <simple-id uuid='{5AC0EBF4-DBEC-4E5B-A0F3-9481C87B337E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Proportional Symbol Map' width='192'>
      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
      /v9/blz+ZYmcH1wAAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
